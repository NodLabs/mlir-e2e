cmake_minimum_required(VERSION 3.18 FATAL_ERROR)
project(codegen C CXX)

include(ExternalProject)

if (NOT DEFINED MLIR_SOURCE)
  set(MLIR_SOURCE ../../external/llvm-project/llvm)
endif()
if (NOT DEFINED MLIR_BUILD)
  set(MLIR_BUILD ${CMAKE_BINARY_DIR}/mlir)
endif()
set(MLIR_INSTALL ${CMAKE_BINARY_DIR}/mlir-install)
ExternalProject_Add(mlir
  PREFIX ${CMAKE_BINARY_DIR}/mlir
  SOURCE_DIR ${MLIR_SOURCE}
  BINARY_DIR ${MLIR_BUILD}
  INSTALL_DIR ${MLIR_INSTALL}
  CMAKE_ARGS
    -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
    -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}
    -DLLVM_BUILD_LLVM_DYLIB:BOOL=ON
    -DLLVM_LINK_LLVM_DYLIB:BOOL=ON
    -DLLVM_INSTALL_UTILS:BOOL=ON
    -DLLVM_TARGETS_TO_BUILD:STRING=X86
    -DLLVM_ENABLE_PROJECTS:STRING=mlir
    -DLLVM_INCLUDE_TOOLS:BOOL=ON
    -DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR>
    -DCMAKE_BUILD_TYPE:STRING=Release
    -DLLVM_ENABLE_ASSERTIONS:BOOL=ON
    -DLLVM_ENABLE_RTTI:BOOL=ON
)

option(USE_MKL "Enable MKL" OFF)
ExternalProject_Add(matmul
  DEPENDS mlir
  PREFIX ${CMAKE_BINARY_DIR}/matmul
  SOURCE_DIR ${CMAKE_SOURCE_DIR}/matmul
  BINARY_DIR ${CMAKE_BINARY_DIR}/matmul 
  INSTALL_COMMAND ${CMAKE_COMMAND} -E echo "Skipping install step."
  CMAKE_ARGS
    -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
    -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}
    -DMLIR_DIR=${MLIR_INSTALL}/lib/cmake/mlir
    -DCMAKE_BUILD_TYPE:STRING=Release
    -DMKL_DIR=${MKL_DIR}
    -DUSE_MKL=${USE_MKL}
)
